var g_data = {"name":"axi_interconnect_veri_top.sv","src":"/////////////////////////////////////////////////////////////////////////////////////////////////////////\n// File name : axi_interconnect_top.sv\n// \n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n`timescale 1ns/1ps\n\n// importing package and includine the necessary files\nimport uvm_pkg::*;\n`include \"uvm_macros.svh\"\n`include \"axi_common.svh\"\n`include \"axi_parameter_pkg.sv\"\n`include \"axi_vip_test_pkg.sv\"\n module axi_interconnect_top();\n\n   import axi_vip_test_pkg::*;\n   import axi_parameter_pkg::*;\n\n   // global signals : clock and reset signals\n   bit aclk;\n   bit aresetn;                                           \n\n   //axi_interface #(data_width,addr_width,master/slave,\"instance name\");\n   axi_interface#(M_DATA_W[0],M_ADDR_W,M_ID_WIDTH[0],0,\"axi_master_if_0\") u_axi_master_if_0();  \n   axi_interface#(M_DATA_W[1],M_ADDR_W,M_ID_WIDTH[1],0,\"axi_master_if_1\") u_axi_master_if_1();\n   axi_interface#(M_DATA_W[2],M_ADDR_W,M_ID_WIDTH[2],0,\"axi_master_if_2\") u_axi_master_if_2();\n   axi_interface#(M_DATA_W[3],M_ADDR_W,M_ID_WIDTH[3],0,\"axi_master_if_3\") u_axi_master_if_3();\n                                        \n   axi_interface#(S_DATA_W[0],S_ADDR_W[0],S_ID_WIDTH, 1, \"axi_slave_if_0\")  u_axi_slave_if_0();\n   axi_interface#(S_DATA_W[1],S_ADDR_W[1],S_ID_WIDTH, 1, \"axi_slave_if_1\")  u_axi_slave_if_1();\n   axi_interface#(S_DATA_W[2],S_ADDR_W[2],S_ID_WIDTH, 1, \"axi_slave_if_2\")  u_axi_slave_if_2();\n   axi_interface#(S_DATA_W[3],S_ADDR_W[3],S_ID_WIDTH, 1, \"axi_slave_if_3\")  u_axi_slave_if_3();\n   axi_interface#(S_DATA_W[4],S_ADDR_W[4],S_ID_WIDTH, 1, \"axi_slave_if_4\")  u_axi_slave_if_4();\n   axi_interface#(S_DATA_W[5],S_ADDR_W[5],S_ID_WIDTH, 1, \"axi_slave_if_5\")  u_axi_slave_if_5();\n   \n\n  // clock generation\n   always #(CP/2) aclk = ~aclk;\n     \n   // Reset and set\n   initial begin\n      aresetn = 1'b1;\n      aclk    = 1'b0;\n      repeat(2) @(posedge aclk);\n      aresetn = 1'b0;\n   end\n\n   \n   // setting the interface for all the agents\n   initial begin\n       \n        uvm_config_db #(virtual axi_footprint_interface #(M_DATA_W[0],M_ADDR_W,M_ID_WIDTH[0]))::set(null, \"uvm_test_top\",\"axi_master_vif_0\", u_axi_master_if_0.max_footprint_if);\n        uvm_config_db #(virtual axi_footprint_interface #(M_DATA_W[1],M_ADDR_W,M_ID_WIDTH[1]))::set(null, \"uvm_test_top\",\"axi_master_vif_1\", u_axi_master_if_1.max_footprint_if);\n        uvm_config_db #(virtual axi_footprint_interface #(M_DATA_W[2],M_ADDR_W,M_ID_WIDTH[2]))::set(null, \"uvm_test_top\",\"axi_master_vif_2\", u_axi_master_if_2.max_footprint_if);\n        uvm_config_db #(virtual axi_footprint_interface #(M_DATA_W[3],M_ADDR_W,M_ID_WIDTH[3]))::set(null, \"uvm_test_top\",\"axi_master_vif_3\", u_axi_master_if_3.max_footprint_if);\n   	\n        uvm_config_db #(virtual axi_footprint_interface #(S_DATA_W[0],S_ADDR_W[0],S_ID_WIDTH))::set(null, \"uvm_test_top\", \"axi_slave_vif_0\", u_axi_slave_if_0.max_footprint_if);\n    	uvm_config_db #(virtual axi_footprint_interface #(S_DATA_W[1],S_ADDR_W[1],S_ID_WIDTH))::set(null, \"uvm_test_top\", \"axi_slave_vif_1\", u_axi_slave_if_1.max_footprint_if);\n    	uvm_config_db #(virtual axi_footprint_interface #(S_DATA_W[2],S_ADDR_W[2],S_ID_WIDTH))::set(null, \"uvm_test_top\", \"axi_slave_vif_2\", u_axi_slave_if_2.max_footprint_if);\n    	uvm_config_db #(virtual axi_footprint_interface #(S_DATA_W[3],S_ADDR_W[3],S_ID_WIDTH))::set(null, \"uvm_test_top\", \"axi_slave_vif_3\", u_axi_slave_if_3.max_footprint_if);\n    	uvm_config_db #(virtual axi_footprint_interface #(S_DATA_W[4],S_ADDR_W[4],S_ID_WIDTH))::set(null, \"uvm_test_top\", \"axi_slave_vif_4\", u_axi_slave_if_4.max_footprint_if);\n    	uvm_config_db #(virtual axi_footprint_interface #(S_DATA_W[5],S_ADDR_W[5],S_ID_WIDTH))::set(null, \"uvm_test_top\", \"axi_slave_vif_5\", u_axi_slave_if_5.max_footprint_if);\n     // initial uvm_config_db #(virtual axi_footprint_interface)::set(null, \"*\",$sformatf( \"axi_slave_vif_%0d\",j), u_axi_slave_if_j.max_footprint_if);\n\n   end\n  //  contionous assignment of clock and reset to respective interfaces\n         \n   assign u_axi_master_if_0.aresetn = aresetn;\n   assign u_axi_master_if_0.aclk    = aclk;\n\n   assign u_axi_master_if_1.aresetn = aresetn;\n   assign u_axi_master_if_1.aclk    = aclk;\n\n   assign u_axi_master_if_2.aresetn = aresetn;\n   assign u_axi_master_if_2.aclk    = aclk;\n\n   assign u_axi_master_if_3.aresetn = aresetn;\n   assign u_axi_master_if_3.aclk    = aclk;\n\n\n   assign u_axi_slave_if_0.aresetn = aresetn;\n   assign u_axi_slave_if_0.aclk    = aclk;\n   \n   assign u_axi_slave_if_1.aresetn = aresetn;\n   assign u_axi_slave_if_1.aclk    = aclk;\n   \n   assign u_axi_slave_if_2.aresetn = aresetn;\n   assign u_axi_slave_if_2.aclk    = aclk;\n  \n   assign u_axi_slave_if_3.aresetn = aresetn;\n   assign u_axi_slave_if_3.aclk    = aclk;\n\n   assign u_axi_slave_if_4.aresetn = aresetn;\n   assign u_axi_slave_if_4.aclk    = aclk;\n\n   assign u_axi_slave_if_5.aresetn = aresetn;\n   assign u_axi_slave_if_5.aclk    = aclk;\n\n\n\n   axi_interconnect_wrapper #(.S_COUNT(NO_M),\n                              .M_COUNT(NO_S),\n                              .S_R_D_WIDTH(M_DATA_W),\n                              .S_W_D_WIDTH(M_DATA_W),\n                              .M_R_D_WIDTH(S_DATA_W),\n                              .M_W_D_WIDTH(S_DATA_W),\n                              .S_A_WIDTH(M_ADDR_W),\n                              .M_A_WIDTH(S_ADDR_W),\n                              .S_STRB_WIDTH(M_STRB_WIDTH),\n                              .M_STRB_WIDTH(S_STRB_WIDTH),\n                              .S_ID_WIDTH(M_ID_WIDTH),\n                              .M_ID_WIDTH(S_ID_WIDTH),\n                              .SUM_S_ID_WIDTH(SUM_M_ID_WIDTH),\n                              .SUM_S_R_D_WIDTH(SUM_M_DATA_W),\n                              .SUM_S_W_D_WIDTH(SUM_M_DATA_W),\n                              .SUM_M_R_D_WIDTH(SUM_S_DATA_W),\n                              .SUM_M_W_D_WIDTH(SUM_S_DATA_W),\n                              .SUM_M_A_WIDTH(SUM_S_ADDR_W),\n							  .SUM_M_STRB_WIDTH(SUM_S_STRB_W),\n							  .SUM_S_STRB_WIDTH(SUM_M_STRB_W),\n                              .MAX_S_ID_WIDTH(MAX_M_ID_WIDTH),\n                              .MAX_M_A_WIDTH(MAX_S_ADDR_WIDTH))\n                           dut1 (.clk             (aclk             ),             \n                                 .rst             (aresetn          ),         \n                                 .s_axi_awid      ({u_axi_master_if_3.awid,    u_axi_master_if_2.awid,    u_axi_master_if_1.awid,    u_axi_master_if_0.awid}      ),\n                                 .s_axi_awaddr    ({u_axi_master_if_3.awaddr,  u_axi_master_if_2.awaddr,  u_axi_master_if_1.awaddr, u_axi_master_if_0.awaddr}    ),\n                                 .s_axi_awlen     ({u_axi_master_if_3.awlen,   u_axi_master_if_2.awlen,   u_axi_master_if_1.awlen,   u_axi_master_if_0.awlen}     ),\n                                 .s_axi_awsize    ({u_axi_master_if_3.awsize,  u_axi_master_if_2.awsize,  u_axi_master_if_1.awsize,  u_axi_master_if_0.awsize}    ),\n                                 .s_axi_awburst   ({u_axi_master_if_3.awburst, u_axi_master_if_2.awburst, u_axi_master_if_1.awburst, u_axi_master_if_0.awburst}   ),\n                                 .s_axi_awlock    ({u_axi_master_if_3.awlock,  u_axi_master_if_2.awlock,  u_axi_master_if_1.awlock,  u_axi_master_if_0.awlock}    ),\n                                 .s_axi_awcache   ({u_axi_master_if_3.awcache, u_axi_master_if_2.awcache, u_axi_master_if_1.awcache, u_axi_master_if_0.awcache}   ),\n                                 .s_axi_awprot    ({u_axi_master_if_3.awprot,  u_axi_master_if_2.awprot,  u_axi_master_if_1.awprot,  u_axi_master_if_0.awprot}    ),\n                                 .s_axi_awqos     ({u_axi_master_if_3.awqos,   u_axi_master_if_2.awqos,   u_axi_master_if_1.awqos,   u_axi_master_if_0.awqos}     ),\n                                 .s_axi_awuser    ({u_axi_master_if_3.awuser,  u_axi_master_if_2.awuser,  u_axi_master_if_1.awuser,  u_axi_master_if_0.awuser}    ),\n                                 .s_axi_awvalid   ({u_axi_master_if_3.awvalid, u_axi_master_if_2.awvalid, u_axi_master_if_1.awvalid, u_axi_master_if_0.awvalid}   ),\n                                 .s_axi_awready   ({u_axi_master_if_3.awready, u_axi_master_if_2.awready, u_axi_master_if_1.awready, u_axi_master_if_0.awready}   ),\n                                 .s_axi_wdata     ({u_axi_master_if_3.wdata,   u_axi_master_if_2.wdata,   u_axi_master_if_1.wdata,   u_axi_master_if_0.wdata}     ),\n                                 .s_axi_wstrb     ({u_axi_master_if_3.wstrb,   u_axi_master_if_2.wstrb,   u_axi_master_if_1.wstrb,   u_axi_master_if_0.wstrb}     ),\n                                 .s_axi_wlast     ({u_axi_master_if_3.wlast,   u_axi_master_if_2.wlast,   u_axi_master_if_1.wlast,   u_axi_master_if_0.wlast}     ),\n                                 .s_axi_wuser     ({u_axi_master_if_3.wuser,   u_axi_master_if_2.wuser,   u_axi_master_if_1.wuser,   u_axi_master_if_0.wuser}     ),\n                                 .s_axi_wvalid    ({u_axi_master_if_3.wvalid,  u_axi_master_if_2.wvalid,  u_axi_master_if_1.wvalid,  u_axi_master_if_0.wvalid}    ),\n                                 .s_axi_wready    ({u_axi_master_if_3.wready,  u_axi_master_if_2.wready,  u_axi_master_if_1.wready,  u_axi_master_if_0.wready}    ),\n                                 .s_axi_bid       ({u_axi_master_if_3.bid,     u_axi_master_if_2.bid,     u_axi_master_if_1.bid,     u_axi_master_if_0.bid}       ),\n                                 .s_axi_bresp     ({u_axi_master_if_3.bresp,   u_axi_master_if_2.bresp,   u_axi_master_if_1.bresp,   u_axi_master_if_0.bresp}     ),\n                                 .s_axi_buser     ({u_axi_master_if_3.buser,   u_axi_master_if_2.buser,   u_axi_master_if_1.buser,   u_axi_master_if_0.buser}     ),\n                                 .s_axi_bvalid    ({u_axi_master_if_3.bvalid,  u_axi_master_if_2.bvalid,  u_axi_master_if_1.bvalid,  u_axi_master_if_0.bvalid}    ),\n                                 .s_axi_bready    ({u_axi_master_if_3.bready,  u_axi_master_if_2.bready,  u_axi_master_if_1.bready,  u_axi_master_if_0.bready}    ),\n                                 .s_axi_arid      ({u_axi_master_if_3.arid,    u_axi_master_if_2.arid,    u_axi_master_if_1.arid,    u_axi_master_if_0.arid}      ),\n                                 .s_axi_araddr    ({u_axi_master_if_3.araddr,  u_axi_master_if_2.araddr,  u_axi_master_if_1.araddr,  u_axi_master_if_0.araddr}    ),\n                                 .s_axi_arlen     ({u_axi_master_if_3.arlen,   u_axi_master_if_2.arlen,   u_axi_master_if_1.arlen,   u_axi_master_if_0.arlen}     ),\n                                 .s_axi_arsize    ({u_axi_master_if_3.arsize,  u_axi_master_if_2.arsize,  u_axi_master_if_1.arsize,  u_axi_master_if_0.arsize}    ),\n                                 .s_axi_arburst   ({u_axi_master_if_3.arburst, u_axi_master_if_2.arburst, u_axi_master_if_1.arburst, u_axi_master_if_0.arburst}   ),\n                                 .s_axi_arlock    ({u_axi_master_if_3.arlock,  u_axi_master_if_2.arlock,  u_axi_master_if_1.arlock,  u_axi_master_if_0.arlock}    ),\n                                 .s_axi_arcache   ({u_axi_master_if_3.arcache, u_axi_master_if_2.arcache, u_axi_master_if_1.arcache, u_axi_master_if_0.arcache}   ),\n                                 .s_axi_arprot    ({u_axi_master_if_3.arprot,  u_axi_master_if_2.arprot,  u_axi_master_if_1.arprot,  u_axi_master_if_0.arprot}    ),\n                                 .s_axi_arqos     ({u_axi_master_if_3.arqos,   u_axi_master_if_2.arqos,   u_axi_master_if_1.arqos,   u_axi_master_if_0.arqos}     ),\n                                 .s_axi_aruser    ({u_axi_master_if_3.aruser,  u_axi_master_if_2.aruser,  u_axi_master_if_1.aruser,  u_axi_master_if_0.aruser}    ),\n                                 .s_axi_arvalid   ({u_axi_master_if_3.arvalid, u_axi_master_if_2.arvalid, u_axi_master_if_1.arvalid, u_axi_master_if_0.arvalid}   ),\n                                 .s_axi_arready   ({u_axi_master_if_3.arready, u_axi_master_if_2.arready, u_axi_master_if_1.arready, u_axi_master_if_0.arready}   ),\n			                     .s_axi_rid       ({u_axi_master_if_3.rid,     u_axi_master_if_2.rid,     u_axi_master_if_1.rid,     u_axi_master_if_0.rid}       ),\n			                     .s_axi_rdata     ({u_axi_master_if_3.rdata,   u_axi_master_if_2.rdata,   u_axi_master_if_1.rdata,   u_axi_master_if_0.rdata}     ),\n			                     .s_axi_rresp     ({u_axi_master_if_3.rresp,   u_axi_master_if_2.rresp,   u_axi_master_if_1.rresp,   u_axi_master_if_0.rresp}     ),\n			                     .s_axi_rlast     ({u_axi_master_if_3.rlast,   u_axi_master_if_2.rlast,   u_axi_master_if_1.rlast,   u_axi_master_if_0.rlast}     ),  				\n                          	     .s_axi_ruser     ({u_axi_master_if_3.ruser,   u_axi_master_if_2.ruser,   u_axi_master_if_1.ruser,   u_axi_master_if_0.ruser}     ),\n			                     .s_axi_rvalid    ({u_axi_master_if_3.rvalid,  u_axi_master_if_2.rvalid,  u_axi_master_if_1.rvalid,  u_axi_master_if_0.rvalid}    ),\n			                     .s_axi_rready    ({u_axi_master_if_3.rready,  u_axi_master_if_2.rready,  u_axi_master_if_1.rready,  u_axi_master_if_0.rready}    ),\n\n                                 .m_axi_awid      ({u_axi_slave_if_5.awid ,    u_axi_slave_if_4.awid ,    u_axi_slave_if_3.awid,     u_axi_slave_if_2.awid,	    u_axi_slave_if_1.awid,	    u_axi_slave_if_0.awid}    	),\n                                 .m_axi_awaddr    ({u_axi_slave_if_5.awaddr ,  u_axi_slave_if_4.awaddr ,  u_axi_slave_if_3.awaddr,   u_axi_slave_if_2.awaddr,	u_axi_slave_if_1.awaddr,    u_axi_slave_if_0.awaddr} 	),\n                                 .m_axi_awlen     ({u_axi_slave_if_5.awlen,    u_axi_slave_if_4.awlen ,   u_axi_slave_if_3.awlen,    u_axi_slave_if_2.awlen,	u_axi_slave_if_1.awlen,	    u_axi_slave_if_0.awlen}		),\n                                 .m_axi_awsize    ({u_axi_slave_if_5.awsize,   u_axi_slave_if_4.awsize ,  u_axi_slave_if_3.awsize,   u_axi_slave_if_2.awsize,	u_axi_slave_if_1.awsize,    u_axi_slave_if_0.awsize}	),\n                                 .m_axi_awburst   ({u_axi_slave_if_5.awburst,  u_axi_slave_if_4.awburst , u_axi_slave_if_3.awburst,  u_axi_slave_if_2.awburst,	u_axi_slave_if_1.awburst,   u_axi_slave_if_0.awburst}	),\n                                 .m_axi_awlock    ({u_axi_slave_if_5.awlock ,  u_axi_slave_if_4.awlock ,  u_axi_slave_if_3.awlock,   u_axi_slave_if_2.awlock,	u_axi_slave_if_1.awlock,    u_axi_slave_if_0.awlock}	),\n                                 .m_axi_awcache   ({u_axi_slave_if_5.awcache,  u_axi_slave_if_4.awcache , u_axi_slave_if_3.awcache,  u_axi_slave_if_2.awcache,	u_axi_slave_if_1.awcache,   u_axi_slave_if_0.awcache}	),\n                                 .m_axi_awprot    ({u_axi_slave_if_5.awprot,   u_axi_slave_if_4.awprot ,  u_axi_slave_if_3.awprot,   u_axi_slave_if_2.awprot,	u_axi_slave_if_1.awprot,    u_axi_slave_if_0.awprot}	),\n                                 .m_axi_awqos     ({u_axi_slave_if_5.awqos,    u_axi_slave_if_4.awqos ,   u_axi_slave_if_3.awqos,    u_axi_slave_if_2.awqos,	u_axi_slave_if_1.awqos,	    u_axi_slave_if_0.awqos}		),\n                                 .m_axi_awregion  ({u_axi_slave_if_5.awregion, u_axi_slave_if_4.awregion, u_axi_slave_if_3.awregion, u_axi_slave_if_2.awregion,	u_axi_slave_if_1.awregion,  u_axi_slave_if_0.awregion}	),\n                                 .m_axi_awuser    ({u_axi_slave_if_5.awuser ,  u_axi_slave_if_4.awuser ,  u_axi_slave_if_3.awuser,   u_axi_slave_if_2.awuser,	u_axi_slave_if_1.awuser,	u_axi_slave_if_0.awuser}	),\n                                 .m_axi_awvalid   ({u_axi_slave_if_5.awvalid , u_axi_slave_if_4.awvalid,  u_axi_slave_if_3.awvalid,  u_axi_slave_if_2.awvalid,	u_axi_slave_if_1.awvalid,   u_axi_slave_if_0.awvalid}	),\n                                 .m_axi_awready   ({u_axi_slave_if_5.awready , u_axi_slave_if_4.awready,  u_axi_slave_if_3.awready,  u_axi_slave_if_2.awready,	u_axi_slave_if_1.awready,   u_axi_slave_if_0.awready}	),\n                                 .m_axi_wdata     ({u_axi_slave_if_5.wdata ,   u_axi_slave_if_4.wdata ,   u_axi_slave_if_3.wdata,    u_axi_slave_if_2.wdata,	u_axi_slave_if_1.wdata,	  	u_axi_slave_if_0.wdata}		),\n                                 .m_axi_wstrb     ({u_axi_slave_if_5.wstrb ,   u_axi_slave_if_4.wstrb ,   u_axi_slave_if_3.wstrb,    u_axi_slave_if_2.wstrb,	u_axi_slave_if_1.wstrb,    	u_axi_slave_if_0.wstrb}		),\n                                 .m_axi_wlast     ({u_axi_slave_if_5.wlast ,   u_axi_slave_if_4.wlast ,   u_axi_slave_if_3.wlast,    u_axi_slave_if_2.wlast,	u_axi_slave_if_1.wlast,		u_axi_slave_if_0.wlast}		),\n                                 .m_axi_wuser     ({u_axi_slave_if_5.wuser ,   u_axi_slave_if_4.wuser ,   u_axi_slave_if_3.wuser,    u_axi_slave_if_2.wuser,	u_axi_slave_if_1.wuser,		u_axi_slave_if_0.wuser}		),\n                                 .m_axi_wvalid    ({u_axi_slave_if_5.wvalid ,  u_axi_slave_if_4.wvalid ,  u_axi_slave_if_3.wvalid,   u_axi_slave_if_2.wvalid,	u_axi_slave_if_1.wvalid,	u_axi_slave_if_0.wvalid}	),\n                                 .m_axi_wready    ({u_axi_slave_if_5.wready ,  u_axi_slave_if_4.wready ,  u_axi_slave_if_3.wready,   u_axi_slave_if_2.wready,	u_axi_slave_if_1.wready,	u_axi_slave_if_0.wready}	),\n                                 .m_axi_bid       ({u_axi_slave_if_5.bid ,     u_axi_slave_if_4.bid ,     u_axi_slave_if_3.bid,      u_axi_slave_if_2.bid,		u_axi_slave_if_1.bid,		u_axi_slave_if_0.bid}		),\n                                 .m_axi_bresp     ({u_axi_slave_if_5.bresp ,   u_axi_slave_if_4.bresp ,   u_axi_slave_if_3.bresp,    u_axi_slave_if_2.bresp,	u_axi_slave_if_1.bresp,		u_axi_slave_if_0.bresp}		),\n                                 .m_axi_buser     ({u_axi_slave_if_5.buser ,   u_axi_slave_if_4.buser ,   u_axi_slave_if_3.buser,    u_axi_slave_if_2.buser,	u_axi_slave_if_1.buser,		u_axi_slave_if_0.buser}		),\n                                 .m_axi_bvalid    ({u_axi_slave_if_5.bvalid ,  u_axi_slave_if_4.bvalid ,  u_axi_slave_if_3.bvalid,   u_axi_slave_if_2.bvalid,	u_axi_slave_if_1.bvalid,	u_axi_slave_if_0.bvalid}	),\n                                 .m_axi_bready    ({u_axi_slave_if_5.bready ,  u_axi_slave_if_4.bready ,  u_axi_slave_if_3.bready,   u_axi_slave_if_2.bready,	u_axi_slave_if_1.bready,	u_axi_slave_if_0.bready}	),\n                                 .m_axi_arid      ({u_axi_slave_if_5.arid ,    u_axi_slave_if_4.arid ,    u_axi_slave_if_3.arid,     u_axi_slave_if_2.arid,	    u_axi_slave_if_1.arid,		u_axi_slave_if_0.arid}		),\n                                 .m_axi_araddr    ({u_axi_slave_if_5.araddr ,  u_axi_slave_if_4.araddr ,  u_axi_slave_if_3.araddr,   u_axi_slave_if_2.araddr,	u_axi_slave_if_1.araddr,	u_axi_slave_if_0.araddr}	),\n                                 .m_axi_arlen     ({u_axi_slave_if_5.arlen ,   u_axi_slave_if_4.arlen ,   u_axi_slave_if_3.arlen,    u_axi_slave_if_2.arlen,	u_axi_slave_if_1.arlen,		u_axi_slave_if_0.arlen}		),\n                                 .m_axi_arsize    ({u_axi_slave_if_5.arsize ,  u_axi_slave_if_4.arsize ,  u_axi_slave_if_3.arsize,   u_axi_slave_if_2.arsize,	u_axi_slave_if_1.arsize,	u_axi_slave_if_0.arsize}	),\n                                 .m_axi_arburst   ({u_axi_slave_if_5.arburst , u_axi_slave_if_4.arburst , u_axi_slave_if_3.arburst,  u_axi_slave_if_2.arburst,	u_axi_slave_if_1.arburst,	u_axi_slave_if_0.arburst}	),\n                                 .m_axi_arlock    ({u_axi_slave_if_5.arlock ,  u_axi_slave_if_4.arlock ,  u_axi_slave_if_3.arlock,   u_axi_slave_if_2.arlock,	u_axi_slave_if_1.arlock,	u_axi_slave_if_0.arlock}	),\n                                 .m_axi_arcache   ({u_axi_slave_if_5.arcache , u_axi_slave_if_4.arcache , u_axi_slave_if_3.arcache,  u_axi_slave_if_2.arcache,	u_axi_slave_if_1.arcache,	u_axi_slave_if_0.arcache}	),\n                                 .m_axi_arprot    ({u_axi_slave_if_5.arprot ,  u_axi_slave_if_4.arprot ,  u_axi_slave_if_3.arprot,   u_axi_slave_if_2.arprot,	u_axi_slave_if_1.arprot,	u_axi_slave_if_0.arprot}	),\n                                 .m_axi_arqos     ({u_axi_slave_if_5.arqos ,   u_axi_slave_if_4.arqos ,   u_axi_slave_if_3.arqos,    u_axi_slave_if_2.arqos,	u_axi_slave_if_1.arqos,		u_axi_slave_if_0.arqos}		),\n                                 .m_axi_arregion  ({u_axi_slave_if_5.arregion, u_axi_slave_if_4.arregion, u_axi_slave_if_3.arregion, u_axi_slave_if_2.arregion,	u_axi_slave_if_1.arregion,	u_axi_slave_if_0.arregion}	),\n                                 .m_axi_aruser    ({u_axi_slave_if_5.aruser ,  u_axi_slave_if_4.aruser ,  u_axi_slave_if_3.aruser,   u_axi_slave_if_2.aruser,	u_axi_slave_if_1.aruser,	u_axi_slave_if_0.aruser}	),\n                                 .m_axi_arvalid   ({u_axi_slave_if_5.arvalid , u_axi_slave_if_4.arvalid , u_axi_slave_if_3.arvalid,  u_axi_slave_if_2.arvalid,	u_axi_slave_if_1.arvalid,	u_axi_slave_if_0.arvalid}   ),\n                                 .m_axi_arready   ({u_axi_slave_if_5.arready , u_axi_slave_if_4.arready , u_axi_slave_if_3.arready,  u_axi_slave_if_2.arready,	u_axi_slave_if_1.arready,	u_axi_slave_if_0.arready}   ),\n                                 .m_axi_rid       ({u_axi_slave_if_5.rid ,	   u_axi_slave_if_4.rid ,     u_axi_slave_if_3.rid,      u_axi_slave_if_2.rid,	    u_axi_slave_if_1.rid,	    u_axi_slave_if_0.rid}       ),\n                                 .m_axi_rdata     ({u_axi_slave_if_5.rdata ,   u_axi_slave_if_4.rdata ,   u_axi_slave_if_3.rdata,    u_axi_slave_if_2.rdata,	u_axi_slave_if_1.rdata,		u_axi_slave_if_0.rdata}     ),\n                                 .m_axi_rresp     ({u_axi_slave_if_5.rresp ,   u_axi_slave_if_4.rresp ,   u_axi_slave_if_3.rresp,    u_axi_slave_if_2.rresp,	u_axi_slave_if_1.rresp,		u_axi_slave_if_0.rresp}     ),\n                                 .m_axi_rlast     ({u_axi_slave_if_5.rlast ,   u_axi_slave_if_4.rlast ,   u_axi_slave_if_3.rlast,    u_axi_slave_if_2.rlast,	u_axi_slave_if_1.rlast,		u_axi_slave_if_0.rlast}     ),\n                                 .m_axi_ruser     ({u_axi_slave_if_5.ruser ,   u_axi_slave_if_4.ruser ,   u_axi_slave_if_3.ruser,    u_axi_slave_if_2.ruser,	u_axi_slave_if_1.ruser,		u_axi_slave_if_0.ruser}     ),\n                                 .m_axi_rvalid    ({u_axi_slave_if_5.rvalid ,  u_axi_slave_if_4.rvalid ,  u_axi_slave_if_3.rvalid,   u_axi_slave_if_2.rvalid,	u_axi_slave_if_1.rvalid,	u_axi_slave_if_0.rvalid}    ),\n                                 .m_axi_rready    ({u_axi_slave_if_5.rready ,  u_axi_slave_if_4.rready ,  u_axi_slave_if_3.rready,   u_axi_slave_if_2.rready,	u_axi_slave_if_1.rready,	u_axi_slave_if_0.rready}    ));\n/*                                                                   \n\n   //To connect from master to slave below connections are required\n   //Protected accesses\n   assign u_axi_slave_if_0.awprot = u_axi_master_if_0.awprot;\n   assign u_axi_slave_if_0.arprot = u_axi_master_if_0.arprot;\n\n\n   //Signals from Master to SLAVE\n   assign u_axi_slave_if_0.awid = u_axi_master_if_0.awid;\n   assign u_axi_slave_if_0.arid = u_axi_master_if_0.arid;\n   assign u_axi_slave_if_0.awaddr = u_axi_master_if_0.awaddr;\n   assign u_axi_slave_if_0.awvalid = u_axi_master_if_0.awvalid;\n   assign u_axi_slave_if_0.awsize = u_axi_master_if_0.awsize;\n   assign u_axi_slave_if_0.wdata = u_axi_master_if_0.wdata;\n   assign u_axi_slave_if_0.wstrb = u_axi_master_if_0.wstrb;\n   assign u_axi_slave_if_0.wvalid = u_axi_master_if_0.wvalid;\n   assign u_axi_slave_if_0.bready = u_axi_master_if_0.bready;\n   assign u_axi_slave_if_0.araddr = u_axi_master_if_0.araddr;\n   assign u_axi_slave_if_0.arvalid = u_axi_master_if_0.arvalid;\n   assign u_axi_slave_if_0.arsize = u_axi_master_if_0.arsize;\n   assign u_axi_slave_if_0.rready = u_axi_master_if_0.rready;\n   assign u_axi_slave_if_0.awlen = u_axi_master_if_0.awlen;\n   assign u_axi_slave_if_0.awburst = u_axi_master_if_0.awburst;\n   assign u_axi_slave_if_0.arlen = u_axi_master_if_0.arlen;\n   assign u_axi_slave_if_0.arburst = u_axi_master_if_0.arburst;\n   assign u_axi_slave_if_0.wlast = u_axi_master_if_0.wlast;\n   //Few signals are required from slave to master\n   //Signals from Slave to MASTER\n   assign u_axi_master_if_0.bid = u_axi_slave_if_0.bid;\n   assign u_axi_master_if_0.rid = u_axi_slave_if_0.rid;\n   assign u_axi_master_if_0.awready = u_axi_slave_if_0.awready;\n   assign u_axi_master_if_0.wready = u_axi_slave_if_0.wready;\n   assign u_axi_master_if_0.bresp = u_axi_slave_if_0.bresp;\n   assign u_axi_master_if_0.bvalid = u_axi_slave_if_0.bvalid;\n   assign u_axi_master_if_0.arready = u_axi_slave_if_0.arready;\n   assign u_axi_master_if_0.rdata = u_axi_slave_if_0.rdata;\n   assign u_axi_master_if_0.rresp = u_axi_slave_if_0.rresp;\n   assign u_axi_master_if_0.rvalid = u_axi_slave_if_0.rvalid;\n   assign u_axi_master_if_0.rlast = u_axi_slave_if_0.rlast; */\n\n\n\ninitial run_test (\"axi_interconnect_basic_test\");\n\n\nendmodule\n\n\n","lang":"verilog"};
processSrcData(g_data);