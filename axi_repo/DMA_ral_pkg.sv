package DMA_ral_pkg;
  import uvm_pkg::*;
  //import rggen_ral_pkg::*;
  `include "uvm_macros.svh"
// This file was autogenerated by PeakRDL-uvm
//
//     // Reg - channel_registers::CMD_REG0
//
//
    class channel_registers__CMD_REG0 extends uvm_reg;
        rand uvm_reg_field RD_START_ADDR;

        function new(string name = "channel_registers__CMD_REG0");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.RD_START_ADDR = new("RD_START_ADDR");
            this.RD_START_ADDR.configure(this, 32, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : channel_registers__CMD_REG0

    // Reg - channel_registers::CMD_REG1
    class channel_registers__CMD_REG1 extends uvm_reg;
        rand uvm_reg_field WR_START_ADDR;

        function new(string name = "channel_registers__CMD_REG1");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.WR_START_ADDR = new("WR_START_ADDR");
            this.WR_START_ADDR.configure(this, 32, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : channel_registers__CMD_REG1

    // Reg - channel_registers::CMD_REG2
    class channel_registers__CMD_REG2 extends uvm_reg;
        rand uvm_reg_field BUFFER_SIZE;

        function new(string name = "channel_registers__CMD_REG2");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.BUFFER_SIZE = new("BUFFER_SIZE");
            this.BUFFER_SIZE.configure(this, 16, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : channel_registers__CMD_REG2

    // Reg - channel_registers::CMD_REG3
    class channel_registers__CMD_REG3 extends uvm_reg;
        rand uvm_reg_field CMD_SET_INT;
        rand uvm_reg_field CMD_LAST;
        rand uvm_reg_field CMD_NEXT_ADDR;

        function new(string name = "channel_registers__CMD_REG3");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.CMD_SET_INT = new("CMD_SET_INT");
            this.CMD_SET_INT.configure(this, 1, 0, "RW", 0, 'h0, 1, 1, 0);
            this.CMD_LAST = new("CMD_LAST");
            this.CMD_LAST.configure(this, 1, 1, "RW", 0, 'h0, 1, 1, 0);
            this.CMD_NEXT_ADDR = new("CMD_NEXT_ADDR");
            this.CMD_NEXT_ADDR.configure(this, 28, 4, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : channel_registers__CMD_REG3

    // Reg - channel_registers::STATIC_REG0
    class channel_registers__STATIC_REG0 extends uvm_reg;
        rand uvm_reg_field RD_BURST_MAX_SIZE;

        function new(string name = "channel_registers__STATIC_REG0");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.RD_BURST_MAX_SIZE = new("RD_BURST_MAX_SIZE");
            this.RD_BURST_MAX_SIZE.configure(this, 10, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : channel_registers__STATIC_REG0

    // Reg - channel_registers::STATIC_REG1
    class channel_registers__STATIC_REG1 extends uvm_reg;
        rand uvm_reg_field WR_BURST_MAX_SIZE;

        function new(string name = "channel_registers__STATIC_REG1");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.WR_BURST_MAX_SIZE = new("WR_BURST_MAX_SIZE");
            this.WR_BURST_MAX_SIZE.configure(this, 10, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : channel_registers__STATIC_REG1

    // Reg - channel_registers::CH_START_REG
    class channel_registers__CH_START_REG extends uvm_reg;
        rand uvm_reg_field CH_START;

        function new(string name = "channel_registers__CH_START_REG");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.CH_START = new("CH_START");
            this.CH_START.configure(this, 1, 0, "WO", 0, 'h0, 0, 1, 0);
        endfunction : build
    endclass : channel_registers__CH_START_REG


    // Addrmap - DMA_block_model
    class DMA_block_model extends uvm_reg_block;
        rand channel_registers__CMD_REG0 CMD_REG0;
        rand channel_registers__CMD_REG1 CMD_REG1;
        rand channel_registers__CMD_REG2 CMD_REG2;
        rand channel_registers__CMD_REG3 CMD_REG3;
        rand channel_registers__STATIC_REG0 STATIC_REG0;
        rand channel_registers__STATIC_REG1 STATIC_REG1;
        rand channel_registers__CH_START_REG CH_START_REG;

        function new(string name = "DMA_block_model");
            super.new(name);
        endfunction : new

        virtual function void build();
            this.default_map = create_map("reg_map", 0, 4, UVM_NO_ENDIAN);
            this.CMD_REG0 = new("CMD_REG0");
            this.CMD_REG0.configure(this);
            this.CMD_REG0.build();
            this.CMD_REG0.add_hdl_path_slice("rd_start_addr",0,32);
            this.default_map.add_reg(this.CMD_REG0, 'h0);
            
            this.CMD_REG1 = new("CMD_REG1");
            this.CMD_REG1.configure(this);
            this.CMD_REG1.build();
            this.CMD_REG1.add_hdl_path_slice("wr_start_addr",0,32);
            this.default_map.add_reg(this.CMD_REG1, 'h4);

            this.CMD_REG2 = new("CMD_REG2");
            this.CMD_REG2.configure(this);
            this.CMD_REG2.build();
            this.CMD_REG2.add_hdl_path_slice("buff_size",0,32);
            this.default_map.add_reg(this.CMD_REG2, 'h8);

            this.CMD_REG3 = new("CMD_REG3");
            this.CMD_REG3.configure(this);
            this.CMD_REG3.build();
            this.CMD_REG3.add_hdl_path_slice("cmd_set_int_reg",0,1);
            this.CMD_REG3.add_hdl_path_slice("cmd_last_reg",1,1);
            this.CMD_REG3.add_hdl_path_slice("cmd_next_addr_reg",4,28);
            this.default_map.add_reg(this.CMD_REG3, 'hc);
            
            this.STATIC_REG0 = new("STATIC_REG0");
            this.STATIC_REG0.configure(this);
            this.STATIC_REG0.build();
            this.STATIC_REG0.add_hdl_path_slice("rd_burst_max_size_reg",0,10);
            //STATIC_REG0.add_hdl_path_slice("rd_restrict[3]",12,1);//full_burst
            //STATIC_REG0.add_hdl_path_slice("rd_restrict[0]",13,1);//full_burst_fifo
            this.STATIC_REG0.add_hdl_path_slice("rd_tokens_reg",16,6);
            this.STATIC_REG0.add_hdl_path_slice("rd_outs_max_reg",24,4);
            //STATIC_REG0.add_hdl_path_slice("rd_restrict[5]",30,1);//outstanding
            this.STATIC_REG0.add_hdl_path_slice("rd_incr_reg",31,1);
            this.default_map.add_reg(this.STATIC_REG0, 'h10);


            this.STATIC_REG1 = new("STATIC_REG1");
            this.STATIC_REG1.configure(this);
            this.STATIC_REG1.build();
            // STATIC_REG1.add_hdl_path_slice("rd_static_line1",0,32);
       // STATIC_REG1.add_hdl_path_slice("",0,32);//
        this.STATIC_REG1.add_hdl_path_slice("wr_burst_max_size_reg",0,10);
       // STATIC_REG1.add_hdl_path_slice("wr_restrict[3]",12,1);//full_burst
       // STATIC_REG1.add_hdl_path_slice("wr_restrict[1]",13,1);//full_burst_fifo
        this.STATIC_REG1.add_hdl_path_slice("wr_tokens_reg",16,6);
        this.STATIC_REG1.add_hdl_path_slice("wr_outs_max_reg",24,4);
       // STATIC_REG1.add_hdl_path_slice("wr_restrict[6]",30,1);//outstanding
        this.STATIC_REG1.add_hdl_path_slice("wr_incr_reg",31,1);
            this.default_map.add_reg(this.STATIC_REG1, 'h14);


            this.CH_START_REG = new("CH_START_REG");
            this.CH_START_REG.configure(this);
            this.CH_START_REG.build();
            this.CH_START_REG.add_hdl_path_slice("ch_update",0,32);
            this.default_map.add_reg(this.CH_START_REG, 'h44);



        add_hdl_path("axi_interconnect_top.inst_dma_axi32.dma_axi32_dual_core.dma_axi32_core0_top.dma_axi32_core0.dma_axi32_core0_channels.dma_axi32_core0_ch0.dma_axi32_ch_reg","RTL");



        endfunction : build
    endclass : DMA_block_model



endpackage

/*

//  `include "rggen_ral_macros.svh"


/*

// reg0
  class CMD_REG0_reg_model extends uvm_reg;
    `uvm_object_utils(CMD_REG0_reg_model)

    rand uvm_reg_field RD_START_ADDR;
    function new(string name="CMD_REG0_reg_model");
      super.new(name, 32, 0);
    endfunction
    function void build();

     RD_START_ADDR = uvm_reg_field::type_id::create("RD_START_ADDR");   

    // Configure
    RD_START_ADDR.configure(  .parent(this), 
                     .size(32), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 

    // Below line is equivalen to above one   
    // temp.configure(this, 32,       0,   "RW",   0,        0,        1,        1,      0); 
    //                  reg, bitwidth, lsb, access, volatile, reselVal, hasReset, isRand, fieldAccess
    
      endfunction
     // `rggen_ral_create_field(RD_START_ADDR, 0, 32, "RW", 0, 32'h00000000, 1, -1, "")
   
  endclass


// reg1
  class CMD_REG1_reg_model extends uvm_reg;
    `uvm_object_utils(CMD_REG1_reg_model)

    rand uvm_reg_field WR_START_ADDR;
    function new(string name="CMD_REG1_reg_model");
      super.new(name, 32, 0);
    endfunction
    function void build();

     WR_START_ADDR = uvm_reg_field::type_id::create("WR_START_ADDR");   

    // Configure
    WR_START_ADDR.configure(  .parent(this), 
                     .size(32), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
      endfunction
   
  endclass



// reg2
  class CMD_REG2_reg_model extends uvm_reg;
    `uvm_object_utils(CMD_REG2_reg_model)

    rand uvm_reg_field BUFFER_SIZE;
    function new(string name="CMD_REG2_reg_model");
      super.new(name, 32, 0);
    endfunction
    function void build();

     BUFFER_SIZE = uvm_reg_field::type_id::create("BUFFER_SIZE");   

    // Configure
    BUFFER_SIZE.configure(  .parent(this), 
                     .size(32), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
      endfunction
   
  endclass


// reg3
  class CMD_REG3_reg_model extends uvm_reg;
    `uvm_object_utils(CMD_REG3_reg_model)
    rand uvm_reg_field CMD_SET_INT;
    rand uvm_reg_field CMD_LAST;
    rand uvm_reg_field CMD_NEXT_ADDR;

    function new(string name="CMD_REG3_reg_model");
      super.new(name, 32, 0);
    endfunction
    function void build();

     CMD_SET_INT= uvm_reg_field::type_id::create("CMD_SET_INT");   
     CMD_LAST= uvm_reg_field::type_id::create("CMD_LAST");   
     CMD_NEXT_ADDR= uvm_reg_field::type_id::create("CMD_NEXT_ADDR");   

    // Configure
   CMD_SET_INT.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1));  
  // Configure CMD_LAST
  CMD_LAST.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(1), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
   // Configure
   CMD_NEXT_ADDR.configure(  .parent(this), 
                     .size(28), 
                     .lsb_pos(4), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 
      endfunction
   
  endclass

// reg4
  class STATIC_REG0_reg_model extends uvm_reg;
    `uvm_object_utils(STATIC_REG0_reg_model);
    rand uvm_reg_field RD_BURST_MAX_SIZE;
    //rand uvm_reg_field RD_ALLOW_FULL_BURST;
    //rand uvm_reg_field RD_ALLOW_FULL_FIFO;
    rand uvm_reg_field RD_TOKENS;
    rand uvm_reg_field RD_OUTS_MAX;
    //rand uvm_reg_field RD_OUTSTANDING;
    rand uvm_reg_field RD_INCR;

    function new(string name="STATIC_REG0_reg_model");
      super.new(name, 32, 0);
    endfunction


    function void build();

     RD_BURST_MAX_SIZE= uvm_reg_field::type_id::create("RD_BURST_MAX_SIZE");   
     //RD_ALLOW_FULL_BURST = uvm_reg_field::type_id::create("RD_ALLOW_FULL_BURST");   
     //RD_ALLOW_FULL_FIFO = uvm_reg_field::type_id::create("RD_ALLOW_FULL_FIFO");   
     RD_TOKENS = uvm_reg_field::type_id::create("RD_TOKENS");   
     RD_OUTS_MAX = uvm_reg_field::type_id::create("RD_OUTS_MAX");   
    // RD_OUTSTANDING = uvm_reg_field::type_id::create("RD_OUTSTANDING");   
     RD_INCR= uvm_reg_field::type_id::create("RD_INCR");   

    // Configure
    RD_BURST_MAX_SIZE.configure(  .parent(this), 
                     .size(10), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1));
 // Configure
  /*  RD_ALLOW_FULL_BURST.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(12), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    RD_ALLOW_FULL_FIFO.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(13), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    RD_TOKENS.configure(  .parent(this), 
                     .size(6), 
                     .lsb_pos(16), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    RD_OUTS_MAX.configure(  .parent(this), 
                     .size(4), 
                     .lsb_pos(24), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
  /*  RD_OUTSTANDING.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(30), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    RD_INCR.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(31), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 

 
      endfunction
   
  endclass


// reg4
  class STATIC_REG1_reg_model extends uvm_reg;
    `uvm_object_utils(STATIC_REG1_reg_model);
    rand uvm_reg_field WR_BURST_MAX_SIZE;
   // rand uvm_reg_field WR_ALLOW_FULL_BURST;
   // rand uvm_reg_field WR_ALLOW_FULL_FIFO;
    rand uvm_reg_field WR_TOKENS;
    rand uvm_reg_field WR_OUTS_MAX;
   // rand uvm_reg_field WR_OUTSTANDING;
    rand uvm_reg_field WR_INCR;

    function new(string name="STATIC_REG1_reg_model");
      super.new(name, 32, 0);
    endfunction


    function void build();

     WR_BURST_MAX_SIZE= uvm_reg_field::type_id::create("WR_BURST_MAX_SIZE");   
    // WR_ALLOW_FULL_BURST = uvm_reg_field::type_id::create("WR_ALLOW_FULL_BURST");   
    // WR_ALLOW_FULL_FIFO = uvm_reg_field::type_id::create("WR_ALLOW_FULL_FIFO");   
     WR_TOKENS = uvm_reg_field::type_id::create("WR_TOKENS");   
     WR_OUTS_MAX = uvm_reg_field::type_id::create("WR_OUTS_MAX");   
     //WR_OUTSTANDING = uvm_reg_field::type_id::create("WR_OUTSTANDING");   
     WR_INCR= uvm_reg_field::type_id::create("WR_INCR");   

    // Configure
    WR_BURST_MAX_SIZE.configure(  .parent(this), 
                     .size(10), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1));
 // Configure
  /*  WR_ALLOW_FULL_BURST.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(12), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    WR_ALLOW_FULL_FIFO.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(13), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    WR_TOKENS.configure(  .parent(this), 
                     .size(6), 
                     .lsb_pos(16), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    WR_OUTS_MAX.configure(  .parent(this), 
                     .size(4), 
                     .lsb_pos(24), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    /*WR_OUTSTANDING.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(30), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 
 // Configure
    WR_INCR.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(31), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 

 
      endfunction
   
  endclass





 class CH_START_REG_reg_model extends uvm_reg;
    `uvm_object_utils(CH_START_REG_reg_model);

    rand uvm_reg_field CH_START;
    function new(string name="CH_START");
      super.new(name, 32, 0);
    endfunction
    function void build();
     CH_START = uvm_reg_field::type_id::create("CH_START");   
    // Configure
   CH_START.configure(  .parent(this), 
                     .size(1), 
                     .lsb_pos(0), 
                   .access("RW"),  
                   .volatile(0), 
                     .reset(0), 
                     .has_reset(1), 
                     .is_rand(1), 
                   .individually_accessible(1)); 

     // `rggen_ral_create_field(CH_START, 0, 1, "WO", 0, 1'h0, 1, -1, "")
    endfunction
  endclass



 class DMA_block_model extends uvm_reg_block;
    `uvm_object_utils(DMA_block_model)

    rand CMD_REG0_reg_model CMD_REG0;
    rand CMD_REG1_reg_model CMD_REG1;
    rand CMD_REG2_reg_model CMD_REG2;
    rand CMD_REG3_reg_model CMD_REG3;
    rand STATIC_REG0_reg_model STATIC_REG0;
    rand STATIC_REG1_reg_model STATIC_REG1;
    rand CH_START_REG_reg_model CH_START_REG;
    function new(string name="DMA_block_model");
      super.new(name, 0);
    endfunction

/*   function void build();
        CMD_REG0 =new("CMD_REG0");
        CMD_REG0.build();
        CMD_REG0.configure(this,null);
        CMD_REG0.add_hdl_path_slice("rd_cmd_line0",0,32);

        CMD_REG1 =new("CMD_REG1");
        CMD_REG1.build();
        CMD_REG1.configure(this,null);
        CMD_REG1.add_hdl_path_slice("rd_cmd_line1",0,32);

        CMD_REG2 =new("CMD_REG2");
        CMD_REG2.build();
        CMD_REG2.configure(this,null);
        CMD_REG2.add_hdl_path_slice("rd_cmd_line2",0,32);
 
        CMD_REG3 =new("CMD_REG3");
        CMD_REG3.build();
        CMD_REG3.configure(this,null);
        CMD_REG3.add_hdl_path_slice("rd_cmd_line3",0,32);
 
        STATIC_REG0 =new(" STATIC_REG0");
        STATIC_REG0.build();
        STATIC_REG0.configure(this,null);
        STATIC_REG0.add_hdl_path_slice("rd_static_line0",0,32);
        
        STATIC_REG1 =new(" STATIC_REG1");
        STATIC_REG1.build();
        STATIC_REG1.configure(this,null);
        STATIC_REG1.add_hdl_path_slice("rd_static_line1",0,32);

        CH_START_REG =new("CH_START_REG");
        CH_START_REG.build();
        CH_START_REG.configure(this,null);
        CH_START_REG.add_hdl_path_slice("rd_cmd_counter",0,32);


    function void build();
        CMD_REG0 =new("CMD_REG0");
        CMD_REG0.build();
        CMD_REG0.configure(this,null);
        CMD_REG0.add_hdl_path_slice("rd_start_addr",0,32);

        CMD_REG1 =new("CMD_REG1");
        CMD_REG1.build();
        CMD_REG1.configure(this,null);
        CMD_REG1.add_hdl_path_slice("wr_start_addr",0,32);

        CMD_REG2 =new("CMD_REG2");
        CMD_REG2.build();
        CMD_REG2.configure(this,null);
        CMD_REG2.add_hdl_path_slice("buff_size",0,32);
 
        CMD_REG3 =new("CMD_REG3");
        CMD_REG3.build();
        CMD_REG3.configure(this,null);
        CMD_REG3.add_hdl_path_slice("cmd_set_int_reg",0,1);
        CMD_REG3.add_hdl_path_slice("cmd_last_reg",1,1);
        CMD_REG3.add_hdl_path_slice("cmd_next_addr_reg",4,28);
 
        STATIC_REG0 =new(" STATIC_REG0");
        STATIC_REG0.build();
        STATIC_REG0.configure(this,null);
        STATIC_REG0.add_hdl_path_slice("rd_burst_max_size_reg",0,10);
        //STATIC_REG0.add_hdl_path_slice("rd_restrict[3]",12,1);//full_burst
        //STATIC_REG0.add_hdl_path_slice("rd_restrict[0]",13,1);//full_burst_fifo
        STATIC_REG0.add_hdl_path_slice("rd_tokens_reg",16,6);
        STATIC_REG0.add_hdl_path_slice("rd_outs_max_reg",24,4);
        //STATIC_REG0.add_hdl_path_slice("rd_restrict[5]",30,1);//outstanding
        STATIC_REG0.add_hdl_path_slice("rd_incr_reg",31,1);
        
        STATIC_REG1 =new(" STATIC_REG1");
        STATIC_REG1.build();
        STATIC_REG1.configure(this,null);
       // STATIC_REG1.add_hdl_path_slice("rd_static_line1",0,32);
       // STATIC_REG1.add_hdl_path_slice("",0,32);//
        STATIC_REG1.add_hdl_path_slice("wr_burst_max_size_reg",0,10);
       // STATIC_REG1.add_hdl_path_slice("wr_restrict[3]",12,1);//full_burst
       // STATIC_REG1.add_hdl_path_slice("wr_restrict[1]",13,1);//full_burst_fifo
        STATIC_REG1.add_hdl_path_slice("wr_tokens_reg",16,6);
        STATIC_REG1.add_hdl_path_slice("wr_outs_max_reg",24,4);
       // STATIC_REG1.add_hdl_path_slice("wr_restrict[6]",30,1);//outstanding
        STATIC_REG1.add_hdl_path_slice("wr_incr_reg",31,1);



        CH_START_REG =new("CH_START_REG");
        CH_START_REG.build();
        CH_START_REG.configure(this,null);
        CH_START_REG.add_hdl_path_slice("ch_update",0,32);

      default_map = create_map("default_map", 0, 4, UVM_LITTLE_ENDIAN,1);
      default_map.add_reg(CMD_REG0,13'd0,"RW",'d0);
      default_map.add_reg(CMD_REG1,13'd4,"RW",'d0);
      default_map.add_reg(CMD_REG2,'h08,"RW",'d0);
      default_map.add_reg(CMD_REG3,'h0C,"RW",'d0);
      default_map.add_reg(STATIC_REG0,'h10,"RW",'d0);
      default_map.add_reg(STATIC_REG1,'h14,"RW",'d0);
      default_map.add_reg(CH_START_REG,'h44,"RW",'d0);

  add_hdl_path("axi_interconnect_top.inst_dma_axi32.dma_axi32_dual_core.dma_axi32_core0_top.dma_axi32_core0.dma_axi32_core0_channels.dma_axi32_core0_ch0.dma_axi32_ch_reg","RTL");
endfunction
  endclass
/*
  class CMD_REG1_reg_model extends rggen_ral_reg;
    rand rggen_ral_field WR_START_ADDR;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(WR_START_ADDR, 0, 32, "RW", 0, 32'h00000000, 1, -1, "")
    endfunction
  endclass
  class CMD_REG2_reg_model extends rggen_ral_reg;
    rand rggen_ral_field BUFFER_SIZE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(BUFFER_SIZE, 0, 16, "RW", 0, 16'h0000, 1, -1, "")
    endfunction
  endclass
  class CMD_REG3_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CMD_SET_INT;
    rand rggen_ral_field CMD_LAST;
    rand rggen_ral_field CMD_NEXT_ADDR;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CMD_SET_INT, 0, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CMD_LAST, 1, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CMD_NEXT_ADDR, 4, 28, "RW", 0, 28'h0000000, 1, -1, "")
    endfunction
  endclass
  class STATIC_REG0_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_BURST_MAX_SIZE;
    rand rggen_ral_field RD_ALLOW_FULL_BURST;
    rand rggen_ral_field RD_ALLOW_FULL_FIFO;
    rand rggen_ral_field RD_TOKENS;
    rand rggen_ral_field RD_OUTS_MAX;
    rand rggen_ral_field RD_OUTSTANDING;
    rand rggen_ral_field RD_INCR;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_BURST_MAX_SIZE, 0, 10, "RW", 0, 10'h000, 1, -1, "")
      `rggen_ral_create_field(RD_ALLOW_FULL_BURST, 12, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_ALLOW_FULL_FIFO, 13, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_TOKENS, 16, 6, "RW", 0, 6'h01, 1, -1, "")
      `rggen_ral_create_field(RD_OUTS_MAX, 24, 4, "RW", 0, 4'h4, 1, -1, "")
      `rggen_ral_create_field(RD_OUTSTANDING, 30, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_INCR, 31, 1, "RW", 0, 1'h1, 1, -1, "")
    endfunction
  endclass
  class STATIC_REG1_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_BURST_MAX_SIZE;
    rand rggen_ral_field RD_ALLOW_FULL_BURST;
    rand rggen_ral_field RD_ALLOW_FULL_FIFO;
    rand rggen_ral_field RD_TOKENS;
    rand rggen_ral_field RD_OUTS_MAX;
    rand rggen_ral_field RD_OUTSTANDING;
    rand rggen_ral_field RD_INCR;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_BURST_MAX_SIZE, 0, 10, "RW", 0, 10'h000, 1, -1, "")
      `rggen_ral_create_field(RD_ALLOW_FULL_BURST, 12, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_ALLOW_FULL_FIFO, 13, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_TOKENS, 16, 6, "RW", 0, 6'h01, 1, -1, "")
      `rggen_ral_create_field(RD_OUTS_MAX, 24, 4, "RW", 0, 4'h4, 1, -1, "")
      `rggen_ral_create_field(RD_OUTSTANDING, 30, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_INCR, 31, 1, "RW", 0, 1'h1, 1, -1, "")
    endfunction
  endclass
  class STATIC_REG2_reg_model extends rggen_ral_reg;
    rand rggen_ral_field FRAME_WIDTH;
    rand rggen_ral_field BLOCK;
    rand rggen_ral_field JOINT;
    rand rggen_ral_field AUTO_RETRY;
    rand rggen_ral_field RD_CMD_PORT_NUM;
    rand rggen_ral_field RD_PORT_NUM;
    rand rggen_ral_field WR_PORT_NUM;
    rand rggen_ral_field INT_NUM;
    rand rggen_ral_field END_SWAP;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(FRAME_WIDTH, 0, 12, "RW", 0, 12'h000, 1, -1, "")
      `rggen_ral_create_field(BLOCK, 15, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(JOINT, 16, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(AUTO_RETRY, 17, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_CMD_PORT_NUM, 20, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(RD_PORT_NUM, 21, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(WR_PORT_NUM, 22, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_NUM, 24, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(END_SWAP, 28, 2, "RW", 0, 2'h0, 1, -1, "")
    endfunction
  endclass
  class STATIC_REG3_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_WAIT_LIMIT;
    rand rggen_ral_field WR_WAIT_LIMIT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_WAIT_LIMIT, 0, 12, "RW", 0, 12'h000, 1, -1, "")
      `rggen_ral_create_field(WR_WAIT_LIMIT, 16, 12, "RW", 0, 12'h000, 1, -1, "")
    endfunction
  endclass
  class STATIC_REG4_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_PERIPH_NUM;
    rand rggen_ral_field RD_PERIPH_DELAY;
    rand rggen_ral_field RD_PERIPH_BLOCK;
    rand rggen_ral_field WR_PERIPH_NUM;
    rand rggen_ral_field WR_PERIPH_DELAY;
    rand rggen_ral_field WR_PERIPH_BLOCK;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_PERIPH_NUM, 0, 5, "RW", 0, 5'h00, 1, -1, "")
      `rggen_ral_create_field(RD_PERIPH_DELAY, 8, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(RD_PERIPH_BLOCK, 15, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(WR_PERIPH_NUM, 16, 5, "RW", 0, 5'h00, 1, -1, "")
      `rggen_ral_create_field(WR_PERIPH_DELAY, 24, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(WR_PERIPH_BLOCK, 31, 1, "RW", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class RESTRICT_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_ALLOW_FULL_FIFO;
    rand rggen_ral_field WR_ALLOW_FULL_FIFO;
    rand rggen_ral_field ALLOW_FULL_FIFO;
    rand rggen_ral_field ALLOW_FULL_BURST;
    rand rggen_ral_field ALLOW_JOINT_BURST;
    rand rggen_ral_field RD_OUTSTANDING_STAT;
    rand rggen_ral_field WR_OUTSTANDING_STAT;
    rand rggen_ral_field BLOCK_NON_ALIGN_STAT;
    rand rggen_ral_field SIMPLE_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_ALLOW_FULL_FIFO, 0, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(WR_ALLOW_FULL_FIFO, 1, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(ALLOW_FULL_FIFO, 2, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(ALLOW_FULL_BURST, 3, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(ALLOW_JOINT_BURST, 4, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(RD_OUTSTANDING_STAT, 5, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(WR_OUTSTANDING_STAT, 6, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(BLOCK_NON_ALIGN_STAT, 7, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(SIMPLE_STAT, 8, 1, "RO", 1, 1'h0, 0, -1, "")
    endfunction
  endclass
  class READ_OFFSET_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_OFFSET;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_OFFSET, 0, 16, "RO", 1, 16'h0000, 1, -1, "")
    endfunction
  endclass
  class WRITE_OFFSET_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field WR_OFFSET;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(WR_OFFSET, 0, 16, "RO", 1, 16'h0000, 1, -1, "")
    endfunction
  endclass
  class FIFO_FULLNESS_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_GAP;
    rand rggen_ral_field WR_FULLNESS;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_GAP, 0, 10, "RO", 1, 10'h000, 1, -1, "")
      `rggen_ral_create_field(WR_FULLNESS, 16, 10, "RO", 1, 10'h000, 1, -1, "")
    endfunction
  endclass
  class CMD_OUTS_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field RD_CMD_OUTS;
    rand rggen_ral_field WR_CMD_OUTS;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(RD_CMD_OUTS, 0, 6, "RO", 1, 6'h3f, 1, -1, "")
      `rggen_ral_create_field(WR_CMD_OUTS, 8, 6, "RO", 1, 6'h3f, 1, -1, "")
    endfunction
  endclass
  class CH_ENABLE_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CH_ENABLE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CH_ENABLE, 0, 1, "RW", 0, 1'h1, 1, -1, "")
    endfunction
  endclass
  class CH_START_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CH_START;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CH_START, 0, 1, "WO", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class CH_ACTIVE_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CH_RD_ACTIVE;
    rand rggen_ral_field CH_WR_ACTIVE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CH_RD_ACTIVE, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CH_WR_ACTIVE, 1, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class COUNT_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field BUFF_COUNT;
    rand rggen_ral_field INT_COUNT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(BUFF_COUNT, 0, 16, "RO", 1, 16'h0000, 1, -1, "")
      `rggen_ral_create_field(INT_COUNT, 16, 6, "RO", 1, 6'h00, 1, -1, "")
    endfunction
  endclass
  class INT_RAWSTAT_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field INT_RAWSTAT_CH_END;
    rand rggen_ral_field INT_RAWSTAT_RD_DECERR;
    rand rggen_ral_field INT_RAWSTAT_RD_SLVERR;
    rand rggen_ral_field INT_RAWSTAT_WR_DECERR;
    rand rggen_ral_field INT_RAWSTAT_WR_SLVERR;
    rand rggen_ral_field INT_RAWSTAT_OVERFLOW;
    rand rggen_ral_field INT_RAWSTAT_UNDERFLOW;
    rand rggen_ral_field INT_RAWSTAT_TIMEOUT_R;
    rand rggen_ral_field INT_RAWSTAT_TIMEOUT_AR;
    rand rggen_ral_field INT_RAWSTAT_TIMEOUT_B;
    rand rggen_ral_field INT_RAWSTAT_TIMEOUT_W;
    rand rggen_ral_field INT_RAWSTAT_TIMEOUT_AW;
    rand rggen_ral_field INT_RAWSTAT_WDT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(INT_RAWSTAT_CH_END, 0, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_RD_DECERR, 1, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_RD_SLVERR, 2, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_WR_DECERR, 3, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_WR_SLVERR, 4, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_OVERFLOW, 5, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_UNDERFLOW, 6, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_TIMEOUT_R, 7, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_TIMEOUT_AR, 8, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_TIMEOUT_B, 9, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_TIMEOUT_W, 10, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_TIMEOUT_AW, 11, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_RAWSTAT_WDT, 12, 1, "RW", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT_CLEAR_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field INT_CLR_CH_END;
    rand rggen_ral_field INT_CLR_RD_DECERR;
    rand rggen_ral_field INT_CLR_RD_SLVERR;
    rand rggen_ral_field INT_CLR_WR_DECERR;
    rand rggen_ral_field INT_CLR_WR_SLVERR;
    rand rggen_ral_field INT_CLR_OVERFLOW;
    rand rggen_ral_field INT_CLR_UNDERFLOW;
    rand rggen_ral_field INT_CLR_TIMEOUT_R;
    rand rggen_ral_field INT_CLR_TIMEOUT_AR;
    rand rggen_ral_field INT_CLR_TIMEOUT_B;
    rand rggen_ral_field INT_CLR_TIMEOUT_W;
    rand rggen_ral_field INT_CLR_TIMEOUT_AW;
    rand rggen_ral_field INT_CLR_WDT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(INT_CLR_CH_END, 0, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_RD_DECERR, 1, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_RD_SLVERR, 2, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_WR_DECERR, 3, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_WR_SLVERR, 4, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_OVERFLOW, 5, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_UNDERFLOW, 6, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_TIMEOUT_R, 7, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_TIMEOUT_AR, 8, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_TIMEOUT_B, 9, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_TIMEOUT_W, 10, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_TIMEOUT_AW, 11, 1, "WO", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(INT_CLR_WDT, 12, 1, "WO", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT_ENABLE_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field INT_ENABLE_CH_END;
    rand rggen_ral_field INT_ENABLE_RD_DECERR;
    rand rggen_ral_field INT_ENABLE_RD_SLVERR;
    rand rggen_ral_field INT_ENABLE_WR_DECERR;
    rand rggen_ral_field INT_ENABLE_WR_SLVERR;
    rand rggen_ral_field INT_ENABLE_OVERFLOW;
    rand rggen_ral_field INT_ENABLE_UNDERFLOW;
    rand rggen_ral_field INT_ENABLE_TIMEOUT_R;
    rand rggen_ral_field INT_ENABLE_TIMEOUT_AR;
    rand rggen_ral_field INT_ENABLE_TIMEOUT_B;
    rand rggen_ral_field INT_ENABLE_TIMEOUT_W;
    rand rggen_ral_field INT_ENABLE_TIMEOUT_AW;
    rand rggen_ral_field INT_ENABLE_WDT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(INT_ENABLE_CH_END, 0, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_RD_DECERR, 1, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_RD_SLVERR, 2, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_WR_DECERR, 3, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_WR_SLVERR, 4, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_OVERFLOW, 5, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_UNDERFLOW, 6, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_TIMEOUT_R, 7, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_TIMEOUT_AR, 8, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_TIMEOUT_B, 9, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_TIMEOUT_W, 10, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_TIMEOUT_AW, 11, 1, "RW", 0, 1'h1, 1, -1, "")
      `rggen_ral_create_field(INT_ENABLE_WDT, 12, 1, "RW", 0, 1'h1, 1, -1, "")
    endfunction
  endclass
  class INT_STATUS_REG_reg_model extends rggen_ral_reg;
    rand rggen_ral_field INT_STATUS_CH_END;
    rand rggen_ral_field INT_STATUS_RD_DECERR;
    rand rggen_ral_field INT_STATUS_RD_SLVERR;
    rand rggen_ral_field INT_STATUS_WR_DECERR;
    rand rggen_ral_field INT_STATUS_WR_SLVERR;
    rand rggen_ral_field INT_STATUS_OVERFLOW;
    rand rggen_ral_field INT_STATUS_UNDERFLOW;
    rand rggen_ral_field INT_STATUS_TIMEOUT_R;
    rand rggen_ral_field INT_STATUS_TIMEOUT_AR;
    rand rggen_ral_field INT_STATUS_TIMEOUT_B;
    rand rggen_ral_field INT_STATUS_TIMEOUT_W;
    rand rggen_ral_field INT_STATUS_TIMEOUT_AW;
    rand rggen_ral_field INT_STATUS_WDT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(INT_STATUS_CH_END, 0, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_RD_DECERR, 1, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_RD_SLVERR, 2, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_WR_DECERR, 3, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_WR_SLVERR, 4, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_OVERFLOW, 5, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_UNDERFLOW, 6, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_TIMEOUT_R, 7, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_TIMEOUT_AR, 8, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_TIMEOUT_B, 9, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_TIMEOUT_W, 10, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_TIMEOUT_AW, 11, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(INT_STATUS_WDT, 12, 1, "RO", 1, 1'h0, 0, -1, "")
    endfunction
  endclass
  class INT0_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT0_STAT;
    rand rggen_ral_field CORE0_CH1_INT0_STAT;
    rand rggen_ral_field CORE0_CH2_INT0_STAT;
    rand rggen_ral_field CORE0_CH3_INT0_STAT;
    rand rggen_ral_field CORE0_CH4_INT0_STAT;
    rand rggen_ral_field CORE0_CH5_INT0_STAT;
    rand rggen_ral_field CORE0_CH6_INT0_STAT;
    rand rggen_ral_field CORE0_CH7_INT0_STAT;
    rand rggen_ral_field CORE1_CH0_INT0_STAT;
    rand rggen_ral_field CORE1_CH1_INT0_STAT;
    rand rggen_ral_field CORE1_CH2_INT0_STAT;
    rand rggen_ral_field CORE1_CH3_INT0_STAT;
    rand rggen_ral_field CORE1_CH4_INT0_STAT;
    rand rggen_ral_field CORE1_CH5_INT0_STAT;
    rand rggen_ral_field CORE1_CH6_INT0_STAT;
    rand rggen_ral_field CORE1_CH7_INT0_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT0_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT0_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT0_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT0_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT0_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT0_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT0_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT0_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT0_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT0_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT0_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT0_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT0_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT0_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT0_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT0_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT1_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT1_STAT;
    rand rggen_ral_field CORE0_CH1_INT1_STAT;
    rand rggen_ral_field CORE0_CH2_INT1_STAT;
    rand rggen_ral_field CORE0_CH3_INT1_STAT;
    rand rggen_ral_field CORE0_CH4_INT1_STAT;
    rand rggen_ral_field CORE0_CH5_INT1_STAT;
    rand rggen_ral_field CORE0_CH6_INT1_STAT;
    rand rggen_ral_field CORE0_CH7_INT1_STAT;
    rand rggen_ral_field CORE1_CH0_INT1_STAT;
    rand rggen_ral_field CORE1_CH1_INT1_STAT;
    rand rggen_ral_field CORE1_CH2_INT1_STAT;
    rand rggen_ral_field CORE1_CH3_INT1_STAT;
    rand rggen_ral_field CORE1_CH4_INT1_STAT;
    rand rggen_ral_field CORE1_CH5_INT1_STAT;
    rand rggen_ral_field CORE1_CH6_INT1_STAT;
    rand rggen_ral_field CORE1_CH7_INT1_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT1_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT1_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT1_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT1_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT1_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT1_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT1_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT1_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT1_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT1_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT1_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT1_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT1_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT1_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT1_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT1_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT2_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT2_STAT;
    rand rggen_ral_field CORE0_CH1_INT2_STAT;
    rand rggen_ral_field CORE0_CH2_INT2_STAT;
    rand rggen_ral_field CORE0_CH3_INT2_STAT;
    rand rggen_ral_field CORE0_CH4_INT2_STAT;
    rand rggen_ral_field CORE0_CH5_INT2_STAT;
    rand rggen_ral_field CORE0_CH6_INT2_STAT;
    rand rggen_ral_field CORE0_CH7_INT2_STAT;
    rand rggen_ral_field CORE1_CH0_INT2_STAT;
    rand rggen_ral_field CORE1_CH1_INT2_STAT;
    rand rggen_ral_field CORE1_CH2_INT2_STAT;
    rand rggen_ral_field CORE1_CH3_INT2_STAT;
    rand rggen_ral_field CORE1_CH4_INT2_STAT;
    rand rggen_ral_field CORE1_CH5_INT2_STAT;
    rand rggen_ral_field CORE1_CH6_INT2_STAT;
    rand rggen_ral_field CORE1_CH7_INT2_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT2_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT2_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT2_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT2_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT2_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT2_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT2_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT2_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT2_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT2_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT2_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT2_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT2_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT2_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT2_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT2_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT3_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT3_STAT;
    rand rggen_ral_field CORE0_CH1_INT3_STAT;
    rand rggen_ral_field CORE0_CH2_INT3_STAT;
    rand rggen_ral_field CORE0_CH3_INT3_STAT;
    rand rggen_ral_field CORE0_CH4_INT3_STAT;
    rand rggen_ral_field CORE0_CH5_INT3_STAT;
    rand rggen_ral_field CORE0_CH6_INT3_STAT;
    rand rggen_ral_field CORE0_CH7_INT3_STAT;
    rand rggen_ral_field CORE1_CH0_INT3_STAT;
    rand rggen_ral_field CORE1_CH1_INT3_STAT;
    rand rggen_ral_field CORE1_CH2_INT3_STAT;
    rand rggen_ral_field CORE1_CH3_INT3_STAT;
    rand rggen_ral_field CORE1_CH4_INT3_STAT;
    rand rggen_ral_field CORE1_CH5_INT3_STAT;
    rand rggen_ral_field CORE1_CH6_INT3_STAT;
    rand rggen_ral_field CORE1_CH7_INT3_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT3_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT3_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT3_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT3_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT3_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT3_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT3_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT3_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT3_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT3_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT3_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT3_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT3_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT3_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT3_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT3_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT4_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT4_STAT;
    rand rggen_ral_field CORE0_CH1_INT4_STAT;
    rand rggen_ral_field CORE0_CH2_INT4_STAT;
    rand rggen_ral_field CORE0_CH3_INT4_STAT;
    rand rggen_ral_field CORE0_CH4_INT4_STAT;
    rand rggen_ral_field CORE0_CH5_INT4_STAT;
    rand rggen_ral_field CORE0_CH6_INT4_STAT;
    rand rggen_ral_field CORE0_CH7_INT4_STAT;
    rand rggen_ral_field CORE1_CH0_INT4_STAT;
    rand rggen_ral_field CORE1_CH1_INT4_STAT;
    rand rggen_ral_field CORE1_CH2_INT4_STAT;
    rand rggen_ral_field CORE1_CH3_INT4_STAT;
    rand rggen_ral_field CORE1_CH4_INT4_STAT;
    rand rggen_ral_field CORE1_CH5_INT4_STAT;
    rand rggen_ral_field CORE1_CH6_INT4_STAT;
    rand rggen_ral_field CORE1_CH7_INT4_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT4_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT4_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT4_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT4_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT4_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT4_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT4_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT4_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT4_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT4_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT4_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT4_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT4_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT4_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT4_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT4_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT5_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT5_STAT;
    rand rggen_ral_field CORE0_CH1_INT5_STAT;
    rand rggen_ral_field CORE0_CH2_INT5_STAT;
    rand rggen_ral_field CORE0_CH3_INT5_STAT;
    rand rggen_ral_field CORE0_CH4_INT5_STAT;
    rand rggen_ral_field CORE0_CH5_INT5_STAT;
    rand rggen_ral_field CORE0_CH6_INT5_STAT;
    rand rggen_ral_field CORE0_CH7_INT5_STAT;
    rand rggen_ral_field CORE1_CH0_INT5_STAT;
    rand rggen_ral_field CORE1_CH1_INT5_STAT;
    rand rggen_ral_field CORE1_CH2_INT5_STAT;
    rand rggen_ral_field CORE1_CH3_INT5_STAT;
    rand rggen_ral_field CORE1_CH4_INT5_STAT;
    rand rggen_ral_field CORE1_CH5_INT5_STAT;
    rand rggen_ral_field CORE1_CH6_INT5_STAT;
    rand rggen_ral_field CORE1_CH7_INT5_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT5_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT5_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT5_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT5_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT5_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT5_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT5_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT5_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT5_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT5_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT5_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT5_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT5_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT5_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT5_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT5_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT6_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT6_STAT;
    rand rggen_ral_field CORE0_CH1_INT6_STAT;
    rand rggen_ral_field CORE0_CH2_INT6_STAT;
    rand rggen_ral_field CORE0_CH3_INT6_STAT;
    rand rggen_ral_field CORE0_CH4_INT6_STAT;
    rand rggen_ral_field CORE0_CH5_INT6_STAT;
    rand rggen_ral_field CORE0_CH6_INT6_STAT;
    rand rggen_ral_field CORE0_CH7_INT6_STAT;
    rand rggen_ral_field CORE1_CH0_INT6_STAT;
    rand rggen_ral_field CORE1_CH1_INT6_STAT;
    rand rggen_ral_field CORE1_CH2_INT6_STAT;
    rand rggen_ral_field CORE1_CH3_INT6_STAT;
    rand rggen_ral_field CORE1_CH4_INT6_STAT;
    rand rggen_ral_field CORE1_CH5_INT6_STAT;
    rand rggen_ral_field CORE1_CH6_INT6_STAT;
    rand rggen_ral_field CORE1_CH7_INT6_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT6_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT6_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT6_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT6_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT6_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT6_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT6_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT6_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT6_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT6_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT6_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT6_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT6_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT6_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT6_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT6_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class INT7_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CH0_INT7_STAT;
    rand rggen_ral_field CORE0_CH1_INT7_STAT;
    rand rggen_ral_field CORE0_CH2_INT7_STAT;
    rand rggen_ral_field CORE0_CH3_INT7_STAT;
    rand rggen_ral_field CORE0_CH4_INT7_STAT;
    rand rggen_ral_field CORE0_CH5_INT7_STAT;
    rand rggen_ral_field CORE0_CH6_INT7_STAT;
    rand rggen_ral_field CORE0_CH7_INT7_STAT;
    rand rggen_ral_field CORE1_CH0_INT7_STAT;
    rand rggen_ral_field CORE1_CH1_INT7_STAT;
    rand rggen_ral_field CORE1_CH2_INT7_STAT;
    rand rggen_ral_field CORE1_CH3_INT7_STAT;
    rand rggen_ral_field CORE1_CH4_INT7_STAT;
    rand rggen_ral_field CORE1_CH5_INT7_STAT;
    rand rggen_ral_field CORE1_CH6_INT7_STAT;
    rand rggen_ral_field CORE1_CH7_INT7_STAT;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CH0_INT7_STAT, 0, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH1_INT7_STAT, 1, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH2_INT7_STAT, 2, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH3_INT7_STAT, 3, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH4_INT7_STAT, 4, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH5_INT7_STAT, 5, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH6_INT7_STAT, 6, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_CH7_INT7_STAT, 7, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH0_INT7_STAT, 8, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH1_INT7_STAT, 9, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH2_INT7_STAT, 10, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH3_INT7_STAT, 11, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH4_INT7_STAT, 12, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH5_INT7_STAT, 13, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH6_INT7_STAT, 14, 1, "RO", 1, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_CH7_INT7_STAT, 15, 1, "RO", 1, 1'h0, 1, -1, "")
    endfunction
  endclass
  class CORE0_JOINT_MODE_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_JOINT_MODE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_JOINT_MODE, 0, 1, "RW", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class CORE1_JOINT_MODE_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE1_JOINT_MODE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE1_JOINT_MODE, 0, 1, "RW", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class CORE0_PRIORITY_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_RD_PRIO_TOP_NUM;
    rand rggen_ral_field CORE0_RD_PRIO_TOP;
    rand rggen_ral_field CORE0_RD_PRIO_HIGH_NUM;
    rand rggen_ral_field CORE0_RD_PRIO_HIGH;
    rand rggen_ral_field CORE0_WR_PRIO_TOP_NUM;
    rand rggen_ral_field CORE0_WR_PRIO_TOP;
    rand rggen_ral_field CORE0_WR_PRIO_HIGH_NUM;
    rand rggen_ral_field CORE0_WR_PRIO_HIGH;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_RD_PRIO_TOP_NUM, 0, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_RD_PRIO_TOP, 3, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_RD_PRIO_HIGH_NUM, 4, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_RD_PRIO_HIGH, 7, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_WR_PRIO_TOP_NUM, 8, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_WR_PRIO_TOP, 11, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_WR_PRIO_HIGH_NUM, 12, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE0_WR_PRIO_HIGH, 15, 1, "RW", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class CORE1_PRIORITY_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE1_RD_PRIO_TOP_NUM;
    rand rggen_ral_field CORE1_RD_PRIO_TOP;
    rand rggen_ral_field CORE1_RD_PRIO_HIGH_NUM;
    rand rggen_ral_field CORE1_RD_PRIO_HIGH;
    rand rggen_ral_field CORE1_WR_PRIO_TOP_NUM;
    rand rggen_ral_field CORE1_WR_PRIO_TOP;
    rand rggen_ral_field CORE1_WR_PRIO_HIGH_NUM;
    rand rggen_ral_field CORE1_WR_PRIO_HIGH;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE1_RD_PRIO_TOP_NUM, 0, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_RD_PRIO_TOP, 3, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_RD_PRIO_HIGH_NUM, 4, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_RD_PRIO_HIGH, 7, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_WR_PRIO_TOP_NUM, 8, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_WR_PRIO_TOP, 11, 1, "RW", 0, 1'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_WR_PRIO_HIGH_NUM, 12, 3, "RW", 0, 3'h0, 1, -1, "")
      `rggen_ral_create_field(CORE1_WR_PRIO_HIGH, 15, 1, "RW", 0, 1'h0, 1, -1, "")
    endfunction
  endclass
  class CORE0_CLKDIV_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CLKDIV_RATIO;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CLKDIV_RATIO, 0, 4, "RW", 0, 4'h1, 1, -1, "")
    endfunction
  endclass
  class CORE1_CLKDIV_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE1_CLKDIV_RATIO;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE1_CLKDIV_RATIO, 0, 4, "RW", 0, 4'h1, 1, -1, "")
    endfunction
  endclass
  class CORE0_CH_START_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE0_CHANNEL_START;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE0_CHANNEL_START, 0, 8, "WO", 0, 8'h00, 1, -1, "")
    endfunction
  endclass
  class CORE1_CH_START_reg_model extends rggen_ral_reg;
    rand rggen_ral_field CORE1_CHANNEL_START;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(CORE1_CHANNEL_START, 0, 8, "WO", 0, 8'h00, 1, -1, "")
    endfunction
  endclass
  class PERIPH_RX_CTRL_reg_model extends rggen_ral_reg;
    rand rggen_ral_field PERIPH_RX_REQ;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(PERIPH_RX_REQ, 1, 31, "RW", 0, 31'h00000000, 1, -1, "")
    endfunction
  endclass
  class PERIPH_TX_CTRL_reg_model extends rggen_ral_reg;
    rand rggen_ral_field PERIPH_TX_REQ;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(PERIPH_TX_REQ, 1, 31, "RW", 0, 31'h00000000, 1, -1, "")
    endfunction
  endclass
  class IDLE_reg_model extends rggen_ral_reg;
    rand rggen_ral_field IDLE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(IDLE, 0, 1, "RO", 1, 1'h0, 0, -1, "")
    endfunction
  endclass
  class USER_DEF_STATUS_reg_model extends rggen_ral_reg;
    rand rggen_ral_field USER_DEF_INT_NUM;
    rand rggen_ral_field USER_DEF_DUAL_CORE;
    rand rggen_ral_field USER_DEF_IC;
    rand rggen_ral_field USER_DEF_IC_DUAL_PORT;
    rand rggen_ral_field USER_DEF_CLKGATE;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(USER_DEF_INT_NUM, 0, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_DUAL_CORE, 5, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_IC, 6, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_IC_DUAL_PORT, 7, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CLKGATE, 8, 1, "RO", 1, 1'h0, 0, -1, "")
    endfunction
  endclass
  class USER_CORE0_DEF_STATUS0_reg_model extends rggen_ral_reg;
    rand rggen_ral_field USER_DEF_CORE0_CH_NUM;
    rand rggen_ral_field USER_DEF_CORE0_FIFO_SIZE;
    rand rggen_ral_field USER_DEF_CORE0_WCMD_DEPTH;
    rand rggen_ral_field USER_DEF_CORE0_RCMD_DEPTH;
    rand rggen_ral_field USER_DEF_CORE0_ADDR_BITS;
    rand rggen_ral_field USER_DEF_CORE0_AXI_32;
    rand rggen_ral_field USER_DEF_CORE0_BUFF_BITS;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(USER_DEF_CORE0_CH_NUM, 0, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_FIFO_SIZE, 4, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_WCMD_DEPTH, 8, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_RCMD_DEPTH, 12, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_ADDR_BITS, 16, 6, "RO", 1, 6'h00, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_AXI_32, 22, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_BUFF_BITS, 24, 5, "RO", 1, 5'h00, 0, -1, "")
    endfunction
  endclass
  class USER_CORE0_DEF_STATUS1_reg_model extends rggen_ral_reg;
    rand rggen_ral_field USER_DEF_CORE0_WDT;
    rand rggen_ral_field USER_DEF_CORE0_TIMEOUT;
    rand rggen_ral_field USER_DEF_CORE0_TOKENS;
    rand rggen_ral_field USER_DEF_CORE0_PRIO;
    rand rggen_ral_field USER_DEF_CORE0_OUTS;
    rand rggen_ral_field USER_DEF_CORE0_WAIT;
    rand rggen_ral_field USER_DEF_CORE0_BLOCK;
    rand rggen_ral_field USER_DEF_CORE0_JOINT;
    rand rggen_ral_field USER_DEF_CORE0_INDEPENDENT;
    rand rggen_ral_field USER_DEF_CORE0_PERIPH;
    rand rggen_ral_field USER_DEF_CORE0_LISTS;
    rand rggen_ral_field USER_DEF_CORE0_END;
    rand rggen_ral_field USER_DEF_CORE0_CLKDIV;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(USER_DEF_CORE0_WDT, 0, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_TIMEOUT, 1, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_TOKENS, 2, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_PRIO, 3, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_OUTS, 4, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_WAIT, 5, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_BLOCK, 6, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_JOINT, 7, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_INDEPENDENT, 8, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_PERIPH, 9, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_LISTS, 10, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_END, 11, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE0_CLKDIV, 12, 1, "RO", 1, 1'h0, 0, -1, "")
    endfunction
  endclass
  class USER_CORE1_DEF_STATUS0_reg_model extends rggen_ral_reg;
    rand rggen_ral_field USER_DEF_CORE1_CH_NUM;
    rand rggen_ral_field USER_DEF_CORE1_FIFO_SIZE;
    rand rggen_ral_field USER_DEF_CORE1_WCMD_DEPTH;
    rand rggen_ral_field USER_DEF_CORE1_RCMD_DEPTH;
    rand rggen_ral_field USER_DEF_CORE1_ADDR_BITS;
    rand rggen_ral_field USER_DEF_CORE1_AXI_32;
    rand rggen_ral_field USER_DEF_CORE1_BUFF_BITS;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(USER_DEF_CORE1_CH_NUM, 0, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_FIFO_SIZE, 4, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_WCMD_DEPTH, 8, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_RCMD_DEPTH, 12, 4, "RO", 1, 4'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_ADDR_BITS, 16, 6, "RO", 1, 6'h00, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_AXI_32, 22, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_BUFF_BITS, 24, 5, "RO", 1, 5'h00, 0, -1, "")
    endfunction
  endclass
  class USER_CORE1_DEF_STATUS1_reg_model extends rggen_ral_reg;
    rand rggen_ral_field USER_DEF_CORE1_WDT;
    rand rggen_ral_field USER_DEF_CORE1_TIMEOUT;
    rand rggen_ral_field USER_DEF_CORE1_TOKENS;
    rand rggen_ral_field USER_DEF_CORE1_PRIO;
    rand rggen_ral_field USER_DEF_CORE1_OUTS;
    rand rggen_ral_field USER_DEF_CORE1_WAIT;
    rand rggen_ral_field USER_DEF_CORE1_BLOCK;
    rand rggen_ral_field USER_DEF_CORE1_JOINT;
    rand rggen_ral_field USER_DEF_CORE1_INDEPENDENT;
    rand rggen_ral_field USER_DEF_CORE1_PERIPH;
    rand rggen_ral_field USER_DEF_CORE1_LISTS;
    rand rggen_ral_field USER_DEF_CORE1_END;
    rand rggen_ral_field USER_DEF_CORE1_CLKDIV;
    function new(string name);
      super.new(name, 32, 0);
    endfunction
    function void build();
      `rggen_ral_create_field(USER_DEF_CORE1_WDT, 0, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_TIMEOUT, 1, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_TOKENS, 2, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_PRIO, 3, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_OUTS, 4, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_WAIT, 5, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_BLOCK, 6, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_JOINT, 7, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_INDEPENDENT, 8, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_PERIPH, 9, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_LISTS, 10, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_END, 11, 1, "RO", 1, 1'h0, 0, -1, "")
      `rggen_ral_create_field(USER_DEF_CORE1_CLKDIV, 12, 1, "RO", 1, 1'h0, 0, -1, "")
    endfunction
  endclass
  class DMA_block_model extends rggen_ral_block;
    rand CMD_REG0_reg_model CMD_REG0;
    rand CMD_REG1_reg_model CMD_REG1;
    rand CMD_REG2_reg_model CMD_REG2;
    rand CMD_REG3_reg_model CMD_REG3;
    rand STATIC_REG0_reg_model STATIC_REG0;
    rand STATIC_REG1_reg_model STATIC_REG1;
    rand STATIC_REG2_reg_model STATIC_REG2;
    rand STATIC_REG3_reg_model STATIC_REG3;
    rand STATIC_REG4_reg_model STATIC_REG4;
    rand RESTRICT_REG_reg_model RESTRICT_REG;
    rand READ_OFFSET_REG_reg_model READ_OFFSET_REG;
    rand WRITE_OFFSET_REG_reg_model WRITE_OFFSET_REG;
    rand FIFO_FULLNESS_REG_reg_model FIFO_FULLNESS_REG;
    rand CMD_OUTS_REG_reg_model CMD_OUTS_REG;
    rand CH_ENABLE_REG_reg_model CH_ENABLE_REG;
    rand CH_START_REG_reg_model CH_START_REG;
    rand CH_ACTIVE_REG_reg_model CH_ACTIVE_REG;
    rand COUNT_REG_reg_model COUNT_REG;
    rand INT_RAWSTAT_REG_reg_model INT_RAWSTAT_REG;
    rand INT_CLEAR_REG_reg_model INT_CLEAR_REG;
    rand INT_ENABLE_REG_reg_model INT_ENABLE_REG;
    rand INT_STATUS_REG_reg_model INT_STATUS_REG;
    rand INT0_STATUS_reg_model INT0_STATUS;
    rand INT1_STATUS_reg_model INT1_STATUS;
    rand INT2_STATUS_reg_model INT2_STATUS;
    rand INT3_STATUS_reg_model INT3_STATUS;
    rand INT4_STATUS_reg_model INT4_STATUS;
    rand INT5_STATUS_reg_model INT5_STATUS;
    rand INT6_STATUS_reg_model INT6_STATUS;
    rand INT7_STATUS_reg_model INT7_STATUS;
    rand CORE0_JOINT_MODE_reg_model CORE0_JOINT_MODE;
    rand CORE1_JOINT_MODE_reg_model CORE1_JOINT_MODE;
    rand CORE0_PRIORITY_reg_model CORE0_PRIORITY;
    rand CORE1_PRIORITY_reg_model CORE1_PRIORITY;
    rand CORE0_CLKDIV_reg_model CORE0_CLKDIV;
    rand CORE1_CLKDIV_reg_model CORE1_CLKDIV;
    rand CORE0_CH_START_reg_model CORE0_CH_START;
    rand CORE1_CH_START_reg_model CORE1_CH_START;
    rand PERIPH_RX_CTRL_reg_model PERIPH_RX_CTRL;
    rand PERIPH_TX_CTRL_reg_model PERIPH_TX_CTRL;
    rand IDLE_reg_model IDLE;
    rand USER_DEF_STATUS_reg_model USER_DEF_STATUS;
    rand USER_CORE0_DEF_STATUS0_reg_model USER_CORE0_DEF_STATUS0;
    rand USER_CORE0_DEF_STATUS1_reg_model USER_CORE0_DEF_STATUS1;
    rand USER_CORE1_DEF_STATUS0_reg_model USER_CORE1_DEF_STATUS0;
    rand USER_CORE1_DEF_STATUS1_reg_model USER_CORE1_DEF_STATUS1;
    function new(string name);
      super.new(name, 4, 0);
    endfunction
    function void build();
      CMD_REG0 =new("CMD_REG0");
      CMD_REG0.configure(this,'{},"axi_interconnect_top.inst_dma_axi32.dma_axi32_dual_core.dma_axi32_core0_top.dma_axi32_core0.dma_axi32_core0_channels.dma_axi32_core0_ch.dma_axi32_ch_reg");
      CMD_REG0.build();
      default_map = create_map("default_map", 0, 4, UVM_LITTLE_ENDIAN,1);
      default_map.add_reg(CMD_REG0,13'd0,"RW",'d0);
      //`rggen_ral_create_reg(, '{}, 13'h0000, "RW", "axi_interconnect_top.inst_dma_axi32.dma_axi32_dual_core.dma_axi32_core0_top.dma_axi32_core0.dma_axi32_core0_channels.dma_axi32_core0_ch.dma_axi32_ch_reg")
      CMD_REG0.add_hdl_path_slice("CMD_REG0",0,32);
      `rggen_ral_create_reg(CMD_REG1, '{}, 13'h0004, "RW", "g_CMD_REG1.u_register")
      CMD_REG1.add_hdl_path_slice("CMD_REG1",0,32);      
      `rggen_ral_create_reg(CMD_REG2, '{}, 13'h0008, "RW", "g_CMD_REG2.u_register")
      CMD_REG2.add_hdl_path_slice("CMD_REG2",0,32);      
      `rggen_ral_create_reg(CMD_REG3, '{}, 13'h000c, "RW", "g_CMD_REG3.u_register")
      CMD_REG3.add_hdl_path_slice("CMD_REG3",0,32);            
      `rggen_ral_create_reg(STATIC_REG0, '{}, 13'h0010, "RW", "g_STATIC_REG0.u_register")
      STATIC_REG0.add_hdl_path_slice("STATIC_REG0",0,32);      
      `rggen_ral_create_reg(STATIC_REG1, '{}, 13'h0014, "RW", "g_STATIC_REG1.u_register")
      STATIC_REG1.add_hdl_path_slice("STATIC_REG1",0,32);      
      `rggen_ral_create_reg(STATIC_REG2, '{}, 13'h0018, "RW", "g_STATIC_REG2.u_register")
      `rggen_ral_create_reg(STATIC_REG3, '{}, 13'h001c, "RW", "g_STATIC_REG3.u_register")
      `rggen_ral_create_reg(STATIC_REG4, '{}, 13'h0020, "RW", "g_STATIC_REG4.u_register")
      `rggen_ral_create_reg(RESTRICT_REG, '{}, 13'h002c, "RO", "g_RESTRICT_REG.u_register")
      `rggen_ral_create_reg(READ_OFFSET_REG, '{}, 13'h0030, "RO", "g_READ_OFFSET_REG.u_register")
      `rggen_ral_create_reg(WRITE_OFFSET_REG, '{}, 13'h0034, "RO", "g_WRITE_OFFSET_REG.u_register")
      `rggen_ral_create_reg(FIFO_FULLNESS_REG, '{}, 13'h0038, "RO", "g_FIFO_FULLNESS_REG.u_register")
      `rggen_ral_create_reg(CMD_OUTS_REG, '{}, 13'h003c, "RO", "g_CMD_OUTS_REG.u_register")
      `rggen_ral_create_reg(CH_ENABLE_REG, '{}, 13'h0040, "RW", "g_CH_ENABLE_REG.u_register")
      `rggen_ral_create_reg(CH_START_REG, '{}, 13'h0044, "WO", "g_CH_START_REG.u_register")
      `rggen_ral_create_reg(CH_ACTIVE_REG, '{}, 13'h0048, "RO", "g_CH_ACTIVE_REG.u_register")
      `rggen_ral_create_reg(COUNT_REG, '{}, 13'h0050, "RO", "g_COUNT_REG.u_register")
      `rggen_ral_create_reg(INT_RAWSTAT_REG, '{}, 13'h00a0, "RW", "g_INT_RAWSTAT_REG.u_register")
      `rggen_ral_create_reg(INT_CLEAR_REG, '{}, 13'h00a4, "WO", "g_INT_CLEAR_REG.u_register")
      `rggen_ral_create_reg(INT_ENABLE_REG, '{}, 13'h00a8, "RW", "g_INT_ENABLE_REG.u_register")
      `rggen_ral_create_reg(INT_STATUS_REG, '{}, 13'h00ac, "RO", "g_INT_STATUS_REG.u_register")
      `rggen_ral_create_reg(INT0_STATUS, '{}, 13'h1000, "RO", "g_INT0_STATUS.u_register")
      INT0_STATUS.add_hdl_path_slice("INT0_STATUS",0,32);      

      `rggen_ral_create_reg(INT1_STATUS, '{}, 13'h1004, "RO", "g_INT1_STATUS.u_register")
      INT1_STATUS.add_hdl_path_slice("INT1_STATUS",0,32);      

      `rggen_ral_create_reg(INT2_STATUS, '{}, 13'h1008, "RO", "g_INT2_STATUS.u_register")
      INT2_STATUS.add_hdl_path_slice("INT2_STATUS",0,32);      

      `rggen_ral_create_reg(INT3_STATUS, '{}, 13'h100c, "RO", "g_INT3_STATUS.u_register")
      INT3_STATUS.add_hdl_path_slice("INT3_STATUS",0,32);      

      `rggen_ral_create_reg(INT4_STATUS, '{}, 13'h1010, "RO", "g_INT4_STATUS.u_register")
      INT4_STATUS.add_hdl_path_slice("INT4_STATUS",0,32);      

      `rggen_ral_create_reg(INT5_STATUS, '{}, 13'h1014, "RO", "g_INT5_STATUS.u_register")
      INT5_STATUS.add_hdl_path_slice("INT5_STATUS",0,32);      

      `rggen_ral_create_reg(INT6_STATUS, '{}, 13'h1018, "RO", "g_INT6_STATUS.u_register")
      INT6_STATUS.add_hdl_path_slice("INT6_STATUS",0,32);      

      `rggen_ral_create_reg(INT7_STATUS, '{}, 13'h101c, "RO", "g_INT7_STATUS.u_register")
      INT7_STATUS.add_hdl_path_slice("INT7_STATUS",0,32);      

      `rggen_ral_create_reg(CORE0_JOINT_MODE, '{}, 13'h1030, "RW", "g_CORE0_JOINT_MODE.u_register")
      `rggen_ral_create_reg(CORE1_JOINT_MODE, '{}, 13'h1034, "RW", "g_CORE1_JOINT_MODE.u_register")
      `rggen_ral_create_reg(CORE0_PRIORITY, '{}, 13'h1038, "RW", "g_CORE0_PRIORITY.u_register")
      `rggen_ral_create_reg(CORE1_PRIORITY, '{}, 13'h103c, "RW", "g_CORE1_PRIORITY.u_register")
      `rggen_ral_create_reg(CORE0_CLKDIV, '{}, 13'h1040, "RW", "g_CORE0_CLKDIV.u_register")
      `rggen_ral_create_reg(CORE1_CLKDIV, '{}, 13'h1044, "RW", "g_CORE1_CLKDIV.u_register")
      `rggen_ral_create_reg(CORE0_CH_START, '{}, 13'h1048, "WO", "g_CORE0_CH_START.u_register")
      `rggen_ral_create_reg(CORE1_CH_START, '{}, 13'h104c, "WO", "g_CORE1_CH_START.u_register")
      `rggen_ral_create_reg(PERIPH_RX_CTRL, '{}, 13'h1050, "RW", "g_PERIPH_RX_CTRL.u_register")
      `rggen_ral_create_reg(PERIPH_TX_CTRL, '{}, 13'h1054, "RW", "g_PERIPH_TX_CTRL.u_register")
      `rggen_ral_create_reg(IDLE, '{}, 13'h10d0, "RO", "g_IDLE.u_register")
      `rggen_ral_create_reg(USER_DEF_STATUS, '{}, 13'h10e0, "RO", "g_USER_DEF_STATUS.u_register")
      `rggen_ral_create_reg(USER_CORE0_DEF_STATUS0, '{}, 13'h10f0, "RO", "g_USER_CORE0_DEF_STATUS0.u_register")
      `rggen_ral_create_reg(USER_CORE0_DEF_STATUS1, '{}, 13'h10f4, "RO", "g_USER_CORE0_DEF_STATUS1.u_register")
      `rggen_ral_create_reg(USER_CORE1_DEF_STATUS0, '{}, 13'h10f8, "RO", "g_USER_CORE1_DEF_STATUS0.u_register")
      `rggen_ral_create_reg(USER_CORE1_DEF_STATUS1, '{}, 13'h10fc, "RO", "g_USER_CORE1_DEF_STATUS1.u_register")
   //   add_hdl_path("axi_interconnect_top.inst_dma_axi32.dma_axi32_dual_core.dma_axi32_core0_top.dma_axi32_core0.dma_axi32_core0_channels.dma_axi32_core0_ch.dma_axi32_ch_reg","RTL");
    endfunction
  endclass
endpackage


*/
